{"version":3,"sources":["actions/index.js","pages/Login.js","components/Header.jsx","components/ExpenseForm.jsx","components/ExpenseTable.jsx","pages/Wallet.js","App.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","index.js"],"names":["Login","state","email","password","submit","validateEmail","handleChange","target","type","value","setState","handleSubmit","event","props","handleUser","history","preventDefault","push","validatePassword","length","test","this","placeholder","data-testid","onChange","onClick","disabled","React","Component","connect","dispatch","payload","Header","userEmail","newTotal","expenses","reduce","acc","currency","exchangeRates","ask","toFixed","user","wallet","ExpenseForm","expense","description","method","tag","name","getExchangeRatesAPI","fetch","json","data","clearInput","createExpense","setExpense","amount","Object","values","some","console","log","newExpense","id","currencies","htmlFor","map","coin","i","key","ExpenseTable","deleteExpense","setExpenses","filter","Number","split","arrayExpenses","Wallet","getCurrencies","currenciesFilter","keys","App","exact","path","component","INITIAL_STATE","userReducer","action","walletReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.811e3acb.chunk.js","sourcesContent":["export const USER_LOGIN = 'USER_LOGIN';\nexport const setUser = (payload) => ({\n  type: USER_LOGIN,\n  payload: {\n    email: payload.email,\n    password: payload.password,\n  },\n});\n\nexport const SET_CURRENCIES = 'SET_CURRENCIES';\nexport const setCurrencies = (payload) => ({\n  type: SET_CURRENCIES,\n  payload,\n});\n\nexport const getCurrenciesAPI = () => async (dispatch) => {\n  const api = 'https://economia.awesomeapi.com.br/json/all';\n  const data = await (await fetch(api)).json();\n  const currenciesFilter = Object.keys(data).filter((currency) => currency !== 'USDT');\n  dispatch(setCurrencies(currenciesFilter));\n};\n\nexport const SET_EXPENSE = 'SET_EXPENSE';\nexport const setExpenses = (payload) => ({\n  type: SET_EXPENSE,\n  payload,\n});\n\nexport const DELETE_EXPENSE = 'DELETE_EXPENSE';\nexport const newExpenses = (payload) => ({\n  type: DELETE_EXPENSE,\n  payload,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setUser } from '../actions';\n\nclass Login extends React.Component {\n  state = {\n    email: '',\n    password: '',\n    submit: true,\n    validateEmail: false,\n  };\n\n  handleChange = ({ target }) => {\n    const { type, value } = target;\n    this.setState(\n      {\n        [type]: value,\n      },\n      () => {\n        this.validateEmail();\n      },\n    );\n  };\n\n  handleSubmit = (event) => {\n    const { handleUser, history } = this.props;\n    event.preventDefault();\n    handleUser(this.state);\n    history.push('/carteira');\n  };\n\n  validatePassword = () => {\n    const minWord = 6;\n    const { password, validateEmail } = this.state;\n    if (validateEmail && password.length >= minWord) {\n      this.setState({ submit: false });\n    }\n    if (validateEmail && password.length < minWord) {\n      this.setState({ submit: true });\n    }\n  };\n\n  validateEmail = () => {\n    const { email } = this.state;\n    if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(email)) {\n      this.setState(\n        {\n          validateEmail: true,\n        },\n        () => {\n          this.validatePassword();\n        },\n      );\n    } else {\n      this.setState(\n        {\n          validateEmail: false,\n        },\n        () => {\n          this.validatePassword();\n        },\n      );\n    }\n  };\n\n  render() {\n    const { submit } = this.state;\n    return (\n      <div>\n        <form>\n          <input\n            type=\"email\"\n            placeholder=\"Digite seu email\"\n            data-testid=\"email-input\"\n            onChange={ this.handleChange }\n          />\n          <input\n            type=\"password\"\n            placeholder=\"Digite sua senha\"\n            data-testid=\"password-input\"\n            onChange={ this.handleChange }\n          />\n          <button type=\"submit\" onClick={ this.handleSubmit } disabled={ submit }>\n            Entrar\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleUser: (state) => dispatch(setUser(state)),\n});\n\nLogin.propTypes = {\n  handleUser: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\n\nclass Header extends React.Component {\n  render() {\n    const { userEmail } = this.props;\n    const { expenses } = this.props;\n    const newTotal = expenses.reduce((acc, { currency, exchangeRates, value }) => {\n      const fieldExpense = exchangeRates[currency].ask * value;\n      acc += fieldExpense;\n      return acc;\n    }, 0);\n\n    return (\n      <div>\n        <h3 data-testid=\"email-field\">{userEmail}</h3>\n        <p data-testid=\"total-field\">{newTotal.toFixed(2)}</p>\n        <span data-testid=\"header-currency-field\">BRL</span>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  userEmail: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nHeader.propTypes = {\n  userEmail: propTypes.string.isRequired,\n  expenses: propTypes.objectOf(Object).isRequired,\n};\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { setExpenses } from '../actions';\n\nclass ExpenseForm extends React.Component {\n  state = {\n    expense: {\n      value: 0,\n      description: '',\n      currency: '',\n      method: '',\n      tag: '',\n    },\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState(({ expense }) => ({\n      expense: {\n        ...expense,\n        [name]: value,\n      },\n    }));\n  };\n\n  getExchangeRatesAPI = async () => {\n    const api = 'https://economia.awesomeapi.com.br/json/all';\n    const data = await (await fetch(api)).json();\n    return data;\n  };\n\n  clearInput = () => {\n    this.setState({\n      expense: {\n        value: 0,\n        description: '',\n        currency: '',\n        method: '',\n        tag: '',\n      },\n    });\n  };\n\n  createExpense = async () => {\n    const { expense } = this.state;\n    const { setExpense, amount } = this.props;\n    const isExpenseNull = Object.values(expense).some((value) => value === '');\n    if (isExpenseNull) {\n      return console.log('Há campos não preenchidos');\n    }\n    const exchangeRates = await this.getExchangeRatesAPI();\n    const newExpense = { id: amount.length, ...expense, exchangeRates };\n    setExpense(newExpense);\n    this.clearInput();\n  };\n\n  render() {\n    const { currencies } = this.props;\n    const { expense } = this.state;\n    const { value, description } = expense;\n    return (\n      <form>\n        <label htmlFor=\"valor\">\n          Valor:\n          <input\n            data-testid=\"value-input\"\n            type=\"number\"\n            name=\"value\"\n            value={ value }\n            onChange={ this.handleChange }\n            placeholder=\"Digite o valor\"\n          />\n        </label>\n        <label htmlFor=\"descricao\">\n          <input\n            data-testid=\"description-input\"\n            type=\"text\"\n            name=\"description\"\n            value={ description }\n            onChange={ this.handleChange }\n            placeholder=\"Digite uma descrição\"\n          />\n        </label>\n        <label htmlFor=\"currency\">\n          Moeda :\n          <select name=\"currency\" id=\"currency\" onChange={ this.handleChange }>\n            {currencies.map((coin, i) => (\n              <option key={ i } value={ coin }>\n                {coin}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"currency\">\n          Método de pagamento:\n          <select name=\"method\" data-testid=\"method-input\" onChange={ this.handleChange }>\n            <option value=\"Dinheiro\">Dinheiro</option>\n            <option value=\"Cartão de crédito\">Cartão de crédito</option>\n            <option value=\"Cartão de débito\">Cartão de débito</option>\n          </select>\n        </label>\n        <label htmlFor=\"typeExpense\">\n          Tipo de despesa:\n          <select\n            name=\"tag\"\n            id=\"typeExpense\"\n            data-testid=\"tag-input\"\n            onChange={ this.handleChange }\n          >\n            <option value=\"Alimentação\">Alimentação</option>\n            <option value=\"Lazer\">Lazer</option>\n            <option value=\"Trabalho\">Trabalho</option>\n            <option value=\"Transporte\">Transporte</option>\n            <option value=\"Saúde\">Saúde</option>\n          </select>\n        </label>\n        <button type=\"button\" onClick={ this.createExpense }>\n          Adicionar despesa\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  amount: state.wallet.expenses,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  setExpense: (expense) => dispatch(setExpenses(expense)),\n});\n\nExpenseForm.propTypes = {\n  currencies: propTypes.arrayOf(propTypes.string).isRequired,\n  setExpense: propTypes.func.isRequired,\n  amount: propTypes.arrayOf(Object).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { newExpenses } from '../actions';\n\nclass ExpenseTable extends Component {\n  deleteExpense = (id) => {\n    const { expenses, setExpenses } = this.props;\n    const updatedExpenses = expenses.filter((expense) => expense.id !== id);\n    setExpenses(updatedExpenses);\n  };\n\n  render() {\n    const { expenses } = this.props;\n    return (\n      <div>\n        <table>\n          <tr>\n            <th>Descrição</th>\n            <th>Tag</th>\n            <th>Método de pagamento</th>\n            <th>Valor</th>\n            <th>Moeda</th>\n            <th>Câmbio utilizado</th>\n            <th>Valor convertido</th>\n            <th>Moeda de conversão</th>\n            <th>Editar/Excluir</th>\n          </tr>\n          {expenses.map(\n            ({ id, method, value, currency, description, tag, exchangeRates }) => (\n              <tr key={ id }>\n                <td>{description}</td>\n                <td>{tag}</td>\n                <td>{method}</td>\n                <td>{Number(value).toFixed(2)}</td>\n                <td>{exchangeRates[currency].name.split('/')[0]}</td>\n                <td>{Number(exchangeRates[currency].ask).toFixed(2)}</td>\n                <td>{(exchangeRates[currency].ask * value).toFixed(2)}</td>\n                <td>Real</td>\n                <td>\n                  <button type=\"button\">Editar</button>\n                  <button\n                    type=\"button\"\n                    data-testid=\"delete-btn\"\n                    onClick={ () => this.deleteExpense(id) }\n                  >\n                    Excluir\n                  </button>\n                </td>\n              </tr>\n            ),\n          )}\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setExpenses: (arrayExpenses) => dispatch(newExpenses(arrayExpenses)),\n});\n\nExpenseTable.propTypes = {\n  expenses: propTypes.arrayOf(Object).isRequired,\n  setExpenses: propTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseTable);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport { getCurrenciesAPI } from '../actions';\nimport ExpenseForm from '../components/ExpenseForm';\nimport ExpenseTable from '../components/ExpenseTable';\n\nclass Wallet extends React.Component {\n  componentDidMount() {\n    const { getCurrencies } = this.props;\n    getCurrencies();\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <ExpenseForm />\n        <ExpenseTable />\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrencies: () => dispatch(getCurrenciesAPI()),\n});\n\nWallet.propTypes = {\n  getCurrencies: PropTypes.func.isRequired,\n};\nexport default connect(null, mapDispatchToProps)(Wallet);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={ Login } />\n      <Route exact path=\"/carteira\" component={ Wallet } />\n    </Switch>\n  );\n}\n\nexport default App;\n","import { USER_LOGIN } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case USER_LOGIN:\n    return { ...state, ...action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default userReducer;\n","import { DELETE_EXPENSE, SET_CURRENCIES, SET_EXPENSE } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n};\n\nconst walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_CURRENCIES:\n    return { ...state, currencies: action.payload };\n  case SET_EXPENSE:\n    return { ...state, expenses: [...state.expenses, action.payload] };\n  case DELETE_EXPENSE:\n    return { ...state, expenses: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default walletReducer;\n","import { combineReducers } from 'redux';\nimport userReducer from './user';\nimport walletReducer from './wallet';\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  wallet: walletReducer,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={ store }>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}