{"version":3,"sources":["store/actions/index.js","pages/Login.jsx","components/Header.jsx","components/ExpenseForm.jsx","components/ExpenseTable.jsx","pages/Wallet.jsx","App.js","store/reducers/user.js","store/reducers/wallet.js","store/reducers/index.js","store/index.js","index.js"],"names":["Login","state","email","password","submit","validateEmail","handleChange","target","type","value","setState","handleSubmit","event","props","handleUser","history","preventDefault","push","validatePassword","length","test","this","className","placeholder","data-testid","onChange","onClick","disabled","React","Component","connect","dispatch","payload","Header","userEmail","newTotal","expenses","reduce","acc","currency","exchangeRates","ask","toFixed","user","wallet","ExpenseForm","expense","description","method","tag","name","getExchangeRatesAPI","fetch","json","data","clearInput","createExpense","setExpense","amount","Object","values","some","alert","newExpense","id","currencies","htmlFor","map","coin","i","key","selected","ExpenseTable","deleteExpense","setExpenses","filter","scope","Number","split","arrayExpenses","Wallet","getCurrencies","currenciesFilter","keys","App","exact","path","component","INITIAL_STATE","userReducer","action","walletReducer","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed8b73d0.chunk.js","sourcesContent":["export const USER_LOGIN = 'USER_LOGIN';\nexport const setUser = (payload) => ({\n  type: USER_LOGIN,\n  payload: {\n    email: payload.email,\n    password: payload.password,\n  },\n});\n\nexport const SET_CURRENCIES = 'SET_CURRENCIES';\nexport const setCurrencies = (payload) => ({\n  type: SET_CURRENCIES,\n  payload,\n});\n\nexport const getCurrenciesAPI = () => async (dispatch) => {\n  const api = 'https://economia.awesomeapi.com.br/json/all';\n  const data = await (await fetch(api)).json();\n  const currenciesFilter = Object.keys(data).filter((currency) => currency !== 'USDT');\n  dispatch(setCurrencies(currenciesFilter));\n};\n\nexport const SET_EXPENSE = 'SET_EXPENSE';\nexport const setExpenses = (payload) => ({\n  type: SET_EXPENSE,\n  payload,\n});\n\nexport const DELETE_EXPENSE = 'DELETE_EXPENSE';\nexport const newExpenses = (payload) => ({\n  type: DELETE_EXPENSE,\n  payload,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { setUser } from '../store/actions';\nimport './Login.css';\nclass Login extends React.Component {\n  state = {\n    email: '',\n    password: '',\n    submit: true,\n    validateEmail: false,\n  };\n\n  handleChange = ({ target }) => {\n    const { type, value } = target;\n    this.setState(\n      {\n        [type]: value,\n      },\n      () => {\n        this.validateEmail();\n      }\n    );\n  };\n\n  handleSubmit = (event) => {\n    const { handleUser, history } = this.props;\n    event.preventDefault();\n    handleUser(this.state);\n    history.push('/carteira');\n  };\n\n  validatePassword = () => {\n    const minWord = 6;\n    const { password, validateEmail } = this.state;\n    if (validateEmail && password.length >= minWord) {\n      this.setState({ submit: false });\n    }\n    if (validateEmail && password.length < minWord) {\n      this.setState({ submit: true });\n    }\n  };\n\n  validateEmail = () => {\n    const { email } = this.state;\n    if (/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/.test(email)) {\n      this.setState(\n        {\n          validateEmail: true,\n        },\n        () => {\n          this.validatePassword();\n        }\n      );\n    } else {\n      this.setState(\n        {\n          validateEmail: false,\n        },\n        () => {\n          this.validatePassword();\n        }\n      );\n    }\n  };\n\n  render() {\n    const { submit } = this.state;\n    return (\n      <div>\n        <form className=\"login\">\n          <input\n            className=\"input-group-text\"\n            type=\"email\"\n            placeholder=\"Digite seu email\"\n            data-testid=\"email-input\"\n            onChange={this.handleChange}\n          />\n          <input\n            className=\"input-group-text\"\n            type=\"password\"\n            placeholder=\"Digite sua senha\"\n            data-testid=\"password-input\"\n            onChange={this.handleChange}\n          />\n          <button\n            className=\"btn btn-primary\"\n            type=\"submit\"\n            onClick={this.handleSubmit}\n            disabled={submit}\n          >\n            Entrar\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  handleUser: (state) => dispatch(setUser(state)),\n});\n\nLogin.propTypes = {\n  handleUser: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport './Header.css';\nclass Header extends React.Component {\n  render() {\n    const { userEmail } = this.props;\n    const { expenses } = this.props;\n    const newTotal = expenses.reduce((acc, { currency, exchangeRates, value }) => {\n      const fieldExpense = exchangeRates[currency].ask * value;\n      acc += fieldExpense;\n      return acc;\n    }, 0);\n\n    return (\n      <>\n        <h3 className=\"h4\">Total das despesas: R$ {newTotal.toFixed(2)}</h3>\n        <p>{userEmail}</p>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  userEmail: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nHeader.propTypes = {\n  userEmail: propTypes.string.isRequired,\n  expenses: propTypes.objectOf(Object).isRequired,\n};\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { setExpenses } from '../store/actions';\nimport './ExpenseForm.css';\n\nclass ExpenseForm extends React.Component {\n  state = {\n    expense: {\n      value: 0,\n      description: '',\n      currency: '',\n      method: '',\n      tag: '',\n    },\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState(({ expense }) => ({\n      expense: {\n        ...expense,\n        [name]: value,\n      },\n    }));\n  };\n\n  getExchangeRatesAPI = async () => {\n    const api = 'https://economia.awesomeapi.com.br/json/all';\n    const data = await (await fetch(api)).json();\n    return data;\n  };\n\n  clearInput = () => {\n    this.setState({\n      expense: {\n        value: 0,\n        description: '',\n        currency: '',\n        method: '',\n        tag: '',\n      },\n    });\n  };\n\n  createExpense = async () => {\n    const { expense } = this.state;\n    const { setExpense, amount } = this.props;\n    const isExpenseNull = Object.values(expense).some((value) => value === '');\n    if (isExpenseNull) {\n      return alert('Há campos não preenchidos');\n    }\n    const exchangeRates = await this.getExchangeRatesAPI();\n    const newExpense = { id: amount.length, ...expense, exchangeRates };\n    setExpense(newExpense);\n    this.clearInput();\n  };\n\n  render() {\n    const { currencies } = this.props;\n    const { expense } = this.state;\n    const { value, description } = expense;\n    return (\n      <form className=\"input-group flex-nowrap\">\n        <input\n          type=\"number\"\n          name=\"value\"\n          value={value}\n          onChange={this.handleChange}\n          className=\"input-group-text  inputnumber\"\n        />\n        <input\n          data-testid=\"description-input\"\n          type=\"text\"\n          name=\"description\"\n          value={description}\n          onChange={this.handleChange}\n          placeholder=\"Descrição\"\n          className=\"input-group-text inputform\"\n        />\n        <label htmlFor=\"currency\" className=\"input-group-text\">\n          <select\n            name=\"currency\"\n            id=\"currency\"\n            onChange={this.handleChange}\n            className=\"input-group-text inputform\"\n          >\n            <option value=\"Moeda\">Moeda</option>\n            {currencies.map((coin, i) => (\n              <option key={i} value={coin}>\n                {coin}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"currency\" className=\"input-group-text\">\n          <select\n            name=\"method\"\n            onChange={this.handleChange}\n            className=\"input-group-text inputform\"\n          >\n            <option value=\"Método\">Pagamento</option>\n            <option value=\"Dinheiro\">Dinheiro</option>\n            <option value=\"Cartão de crédito\">Cartão de crédito</option>\n            <option value=\"Cartão de débito\">Cartão de débito</option>\n          </select>\n        </label>\n        <label htmlFor=\"typeExpense\" className=\"input-group-text\">\n          <select\n            name=\"tag\"\n            id=\"typeExpense\"\n            data-testid=\"tag-input\"\n            onChange={this.handleChange}\n            className=\"input-group-text\"\n          >\n            <option selected value=\"Despesa\">Tipo de despesa</option>\n            <option value=\"Alimentação\">Alimentação</option>\n            <option value=\"Lazer\">Lazer</option>\n            <option value=\"Trabalho\">Trabalho</option>\n            <option value=\"Transporte\">Transporte</option>\n            <option value=\"Saúde\">Saúde</option>\n          </select>\n        </label>\n        <button type=\"button\" onClick={this.createExpense} className=\"btn btn-primary\">\n          Adicionar despesa\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currencies: state.wallet.currencies,\n  amount: state.wallet.expenses,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  setExpense: (expense) => dispatch(setExpenses(expense)),\n});\n\nExpenseForm.propTypes = {\n  currencies: propTypes.arrayOf(propTypes.string).isRequired,\n  setExpense: propTypes.func.isRequired,\n  amount: propTypes.arrayOf(Object).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { newExpenses } from '../store/actions';\nimport './ExpenseTable.css';\n\nclass ExpenseTable extends Component {\n  deleteExpense = (id) => {\n    const { expenses, setExpenses } = this.props;\n    const updatedExpenses = expenses.filter((expense) => expense.id !== id);\n    setExpenses(updatedExpenses);\n  };\n\n  render() {\n    const { expenses } = this.props;\n    return (\n      <div>\n        <table className=\"table\">\n          <thead>\n            <tr className=\"table-thead\">\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Descrição</th>\n              <th scope=\"col\">Tag</th>\n              <th scope=\"col\">Pagamento</th>\n              <th scope=\"col\">Valor</th>\n              <th scope=\"col\">Moeda</th>\n              <th scope=\"col\">Câmbio</th>\n              <th scope=\"col\">Valor convertido</th>\n              <th scope=\"col\">Conversão</th>\n              <t scope=\"col\">Excluir</t>\n            </tr>\n          </thead>\n          <tbody>\n            {expenses.map(\n              ({ id, method, value, currency, description, tag, exchangeRates }) => (\n                <tr key={id}>\n                  <th scope=\"row\">{id + 1}</th>\n                  <td>{description}</td>\n                  <td>{tag}</td>\n                  <td>{method}</td>\n                  <td>{Number(value).toFixed(2)}</td>\n                  <td>{exchangeRates[currency].name.split('/')[0]}</td>\n                  <td>{Number(exchangeRates[currency].ask).toFixed(2)}</td>\n                  <td>{(exchangeRates[currency].ask * value).toFixed(2)}</td>\n                  <td>Real</td>\n                  <td>\n                    <button\n                      className=\"btn btn-danger\"\n                      type=\"button\"\n                      onClick={() => this.deleteExpense(id)}\n                    >\n                      Excluir\n                    </button>\n                  </td>\n                </tr>\n              )\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setExpenses: (arrayExpenses) => dispatch(newExpenses(arrayExpenses)),\n});\n\nExpenseTable.propTypes = {\n  expenses: propTypes.arrayOf(Object).isRequired,\n  setExpenses: propTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseTable);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport { getCurrenciesAPI } from '../store/actions';\nimport ExpenseForm from '../components/ExpenseForm';\nimport ExpenseTable from '../components/ExpenseTable';\n\nclass Wallet extends React.Component {\n  componentDidMount() {\n    const { getCurrencies } = this.props;\n    getCurrencies();\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <ExpenseForm />\n        <ExpenseTable />\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getCurrencies: () => dispatch(getCurrenciesAPI()),\n});\n\nWallet.propTypes = {\n  getCurrencies: PropTypes.func.isRequired,\n};\nexport default connect(null, mapDispatchToProps)(Wallet);\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Login} />\n      <Route exact path=\"/carteira\" component={Wallet} />\n    </Switch>\n  );\n}\n\nexport default App;\n","import { USER_LOGIN } from '../actions';\n\nconst INITIAL_STATE = {\n  email: '',\n  password: '',\n};\n\nconst userReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case USER_LOGIN:\n    return { ...state, ...action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default userReducer;\n","import { DELETE_EXPENSE, SET_CURRENCIES, SET_EXPENSE } from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n};\n\nconst walletReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case SET_CURRENCIES:\n    return { ...state, currencies: action.payload };\n  case SET_EXPENSE:\n    return { ...state, expenses: [...state.expenses, action.payload] };\n  case DELETE_EXPENSE:\n    return { ...state, expenses: action.payload };\n  default:\n    return state;\n  }\n};\n\nexport default walletReducer;\n","import { combineReducers } from 'redux';\nimport userReducer from './user';\nimport walletReducer from './wallet';\n\nconst rootReducer = combineReducers({\n  user: userReducer,\n  wallet: walletReducer,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}